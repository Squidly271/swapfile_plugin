<?xml version='1.0' standalone='yes'?>
<PLUGIN>

############################################
# Virtualbox Plugin by Dan Kessler
# Release Version v0.1
############################################

############################################
# cleanup file
############################################
<FILE Name="/tmp/swapfile-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
# Cleanup previous plugin installation
[ -f /etc/rc.d/rc.swapfile ] && rm --force /etc/rc.d/rc.swapfile
[ -d /usr/local/emhttp/plugins/swapfile ] && rm --force --recursive /usr/local/emhttp/plugins/swapfile
rm /tmp/swapfile-cleanup
]]>
</INLINE>
</FILE>

############################################
# configuration file
############################################
# SWAP_ENABLE_ON_BOOT - Enable Swapfile during unRAID boot or installplg (true/false)
# SWAP_LOCATION - Location of Swapfile
# SWAP_FILENAME - Name of Swapfile file
# SWAP_NAME - Name of Swapfile mount name
# SWAP_SIZE - Size of Swapfile
# SWAP_DELETE - Delete Swapfile each time it is unassigned
############################################
<FILE Name="/boot/config/plugins/swapfile/swapfile.cfg">
<INLINE>
<![CDATA[
# Swapfile plugin configuration
SWAP_ENABLE_ON_BOOT="true"
SWAP_LOCATION="/mnt/cache"
SWAP_FILENAME="swapfile"
SWAP_NAME="UNRAID-SWAP"
SWAP_SIZE_MB="2048"
SWAP_DELETE="false"
]]>
</INLINE>
</FILE>

############################################
# rc.swapfile file
############################################
<FILE Name="/etc/rc.d/rc.swapfile" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh

write_cfg()
#################
# W R I T E C F G
#################
{
echo "# Swapfile plugin configuration" > ${SWAP_PLUGIN_PATH}/swapfile.cfg

echo "SWAP_ENABLE_ON_BOOT=\"$SWAP_ENABLE_ON_BOOT\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg
echo "SWAP_LOCATION=\"$SWAP_LOCATION\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg
echo "SWAP_FILENAME=\"$SWAP_FILENAME\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg
echo "SWAP_NAME=\"$SWAP_NAME\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg
echo "SWAP_SIZE_MB=\"$SWAP_SIZE_MB\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg
echo "SWAP_DELETE=\"$SWAP_DELETE\"" >> ${SWAP_PLUGIN_PATH}/swapfile.cfg

logger -trc.swapfile -plocal7.info -is "Plugin configuration written"
}

swap_start()
#################
# S T A R T
#################
{
	# Check if swapfile exists
	if [ -f ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} ]; then
    SWAP_RUNNING=$(swapon -s | grep ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} | cut -d" " -f1)
		# Check if swapfile already started
    if [ "$SWAP_RUNNING" == "${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}" ] ; then
			logger -trc.swapfile -plocal7.info -is "Swapfile ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} already started"
			return
		else
		  # Turn on Swapfile usage
      swapon -v ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}
			logger -trc.swapfile -plocal7.info -is " Swapfile ${SWAP_LOCATION}/${SWAP_FILENAME} started"
		fi
	# Swapfile does not exist
  else
		# Create Swapfile
		logger -trc.swapfile -plocal7.info -is "Creating ${SWAP_LOCATION}/${SWAP_FILENAME} please wait ..."
    dd if=/dev/zero of=${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} bs=1M count=${SWAP_SIZE_MB_NEW}
		# Assign SWAP_NAME to Swapfile
    mkswap -L ${SWAP_NAME_NEW} ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}
		# Change Swapfile permissions as required
    chmod 600 ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}
		# Turn on Swapfile usage
    swapon -v ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}
		logger -trc.swapfile -plocal7.info -is "Swapfile ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} created and started"
	fi
}

swap_stop()
#################
# S T O P
#################
{
	# Check if swapfile assigned and in use
  SWAP_RUNNING=$(swapon -s | grep ${SWAP_LOCATION}/${SWAP_FILENAME} | cut -d" " -f1)
	if [ "$SWAP_RUNNING" == "${SWAP_LOCATION}/${SWAP_FILENAME}" ] ; then
		# Turn off Swapfile usage
    swapoff -a -v ${SWAP_LOCATION}/${SWAP_FILENAME}
		if [ "$SWAP_DELETE" == "true" ] ; then
      rm ${SWAP_LOCATION}/${SWAP_FILENAME}
      logger -trc.swapfile -plocal7.info -is "Swapfile ${SWAP_LOCATION}/${SWAP_FILENAME} stopped and removed"
    else
      logger -trc.swapfile -plocal7.info -is "Swapfile ${SWAP_LOCATION}/${SWAP_FILENAME} stopped"
    fi
	else
		logger -trc.swapfile -plocal7.info -is "Swapfile ${SWAP_LOCATION}/${SWAP_FILENAME} not running"
	fi
}

swap_restart()
#################
# R E S T A R T
#################
{
	swap_stop
	sleep 3
	swap_start
}

swap_getplgversions()
#################
# G E T P L G V E R S I O N S
#################
{
# VirtualBox Plugin hosting server
VBOX_PLG_HOSTING_SERVER="https://github.com/theone11/swapfile_plugin"
# VirtualBox Plugin hosting server URL + filename
VBOX_PLG_URL="https://raw.github.com/theone11/swapfile_plugin/master/swapfile.plg"
# Get online/offline status of Virtualbox Plugin hosting server
wget --quiet --spider --no-check-certificate $VBOX_PLG_HOSTING_SERVER
VBOX_PLG_HOSTING_SERVER_EXISTS=$?
# Check if Virtualbox Plugin hosting server is online
if [ "$VBOX_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
  # Get latest version number from server
  VBOX_PLG_ONLINE_VER=$(wget --no-check-certificate --quiet $VBOX_PLG_URL -O - | grep -m 1 "Release Version v" | awk 'gsub(/.*Release Version v|*/,"")')
else
  # Set version to server_down - does not exist
  VBOX_PLG_ONLINE_VER="server_down"
fi
# Check if VirtualBox Plugin file exists online
wget --quiet --spider --no-check-certificate $VBOX_PLG_URL
VBOX_PLG_ONLINE_EXIST=$?

# Check if local VirtualBox Plugin file exists
if [ -f /boot/config/plugins/virtualbox.plg ] ; then
  # Get existing version number from local file
  VBOX_PLG_LOCAL_VER=$(grep -m 1 "Release Version v" /boot/config/plugins/swapfile.plg | awk 'gsub(/.*Release Version v|*/,"")')
else
  # Set version to no_local_plg - does not exist
  VBOX_PLG_LOCAL_VER="no_local_plg"
fi

# Write status to update WEBUI
write_status
}

swap_updateplg()
#######################
# U P D A T E P L G
#######################
{
# Get online and local plugin versions
swap_getplgversions

# Check if Plugin hosting server is online
if [ "$VBOX_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
  # Check if latest version is available on server
  if [ "$VBOX_PLG_ONLINE_EXIST" == "0" ] ; then
    # Check if online and local versions are different
    if [ "$VBOX_PLG_ONLINE_VER" != "$VBOX_PLG_LOCAL_VER" ] ; then
      # Check if local plugin doesn't exist
      if [ "$VBOX_PLG_LOCAL_VER" == "no_local_plg" ] ; then
        logger -trc.swapfile -plocal7.info -is "Local plugin does not exist. Installing latest plugin version from hosting server (v$VBOX_PLG_ONLINE_VER)"
      else
        logger -trc.swapfile -plocal7.info -is "Upgrading local plugin (v$VBOX_PLG_LOCAL_VER) to hosting server plugin (v$VBOX_PLG_ONLINE_VER)"
      fi
      # Download new VirtualBox Plugin version
      wget --no-check-certificate --quiet $VBOX_PLG_URL -O /boot/config/plugins/swapfile.plg
      # Stop vboxwebsrv and all Virtual Machines
      swap_stop
      # Install new VirtualBox Plugin
      /usr/local/sbin/installplg /boot/config/plugins/swapfile.plg
      logger -trc.swapfile -plocal7.info -is "New/Updated plugin installation complete"
    # Virtualbox plugin hosting server is offline
    else
      logger -trc.swapfile -plocal7.info -is "Local plugin is the same version as on hosting server (v$VBOX_PLG_LOCAL_VER)"
    fi
  # Web version and local version are the same
  else
    logger -trc.swapfile -plocal7.info -is "Plugin does not exist on plugin hosting server - Cannot download new plugin"
  fi
else
  logger -trc.swapfile -plocal7.info -is "VirtualBox Plugin hosting servers is OFFLINE - Cannot check for new packages versions"
fi
}

[ -f /boot/config/plugins/swapfile/swapfile.cfg ] && source /boot/config/plugins/swapfile/swapfile.cfg

# Copy below parameters for swap_start() function
SWAP_LOCATION_NEW=$SWAP_LOCATION
SWAP_FILENAME_NEW=$SWAP_FILENAME
SWAP_NAME_NEW=$SWAP_NAME
SWAP_SIZE_MB_NEW=$SWAP_SIZE_MB

if [ $1 == "updatecfg" ] ; then
  SWAP_ENABLE_ON_BOOT=$2
  # Check if Swapfile location of filename changed
  SWAP_LOCATION_NEW=$3
  SWAP_FILENAME_NEW=$4
  SWAP_NAME_NEW=$5
  SWAP_SIZE_MB_NEW=$6
  SWAP_DELETE_NEW=$7
  if [ "${SWAP_LOCATION}/${SWAP_FILENAME}" !=  "${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}" ] || [ "$SWAP_NAME" != "$SWAP_NAME_NEW" ] || [ "$SWAP_SIZE" != "$SWAP_SIZE_NEW" ] ; then
    logger -trc.swapfile -plocal7.info -is "New Swapfile configuration is being implemented, Please wait ..."
    # Enable deletion of eisting Swapfile (if exists)
    SWAP_DELETE="true"
    # Restart Swapfile with new configuration
    swap_restart
  fi
  SWAP_LOCATION=$SWAP_LOCATION_NEW
  SWAP_FILENAME=$SWAP_FILENAME_NEW
  SWAP_NAME=$SWAP_NAME_NEW
  SWAP_SIZE_MB=$SWAP_SIZE_MB_NEW
  SWAP_DELETE=$SWAP_DELETE_NEW

  write_cfg
fi

case "$1" in
	'start')
		swap_start
	;;
	'stop')
		swap_stop
	;;
	'restart')
		swap_restart
	;;
	'writecfg')
		write_cfg
	;;
	'updateplg')
		swap_updateplg
	;;
	'getplgversions')
		swap_getplgversions
	;;
	
	*)
		echo "usage $0 start | stop | restart | updatecfg | writecfg | updateplg | getplgversions"
esac
]]>
</INLINE>
</FILE>

############################################
# Event handlers
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.swapfile start
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/swapfile/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.swapfile stop
]]>
</INLINE>
</FILE>

############################################
# Files required to hook the plugin into the unRaid webGui menu system
############################################

############################################
# The page file defines which menu page the plugin will appear on
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/swapfile.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="swapfile.png"
Version=""
Author="Dan Kessler"
Type="php"
Title="Swapfile"
]]>
</INLINE>
</FILE>

############################################
# WEBUI icon
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/swapfile.png">
<LOCAL>/boot/config/plugins/swapfile/swapfile.png</LOCAL>
</FILE>

############################################
# WEBUI page
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/swapfile.php">
<INLINE>
<![CDATA[

<?PHP
shell_exec("/etc/rc.d/rc.virtualbox getplgversions");

$swapfile_cfg = parse_ini_file("/boot/config/plugins/swapfile/swapfile.cfg");

$swap_location = $swapfile_cfg['SWAP_LOCATION'];
$swap_filename = $swapfile_cfg['SWAP_FILENAME'];

$swapfile_exists = (file_exists($swap_location."/".$swap_filename)) ? "Yes" : "No";

shell_exec("swapon -s > /tmp/swap_summary.txt 2>&1");
$swap_summary = file("/tmp/swap_summary.txt", FILE_IGNORE_NEW_LINES);
$swap_summary_cnt = count($swap_summary);

$swap_running = "No"
$swap_size = 0
$swap_usage = 0
for ($i=0; $i<$swap_summary_cnt; $i++)
{
  $pos = strpos($swap_summary[$i], $swap_location."/".$swap_filename);
  if ($pos !== false) && ($pos == 0)
  {
    $swap_running = "Yes";
    $split_string = preg_split("/\s+/", $swap_summary[$i]);
    $swap_size = $split_string[2]
    $swap_usage = $split_string[3]
  }
}

$control_actions_exist = "false";
$version_actions_exist = "false";
?>

<HTML>
<HEAD></HEAD>
<BODY>

<div style="width: 49%; float:left; border: 0px solid black;">
  <div id="title">
    <span class="left">Status summary</span>
  </div>

  <br></br>

  <div style="border: 0px solid black;">
    Swapfile <?=$swap_location."/".$swap_filename;?> exists: <?=$swapfile_exists;?>
    Swapfile <?=$swap_location."/".$swap_filename;?> in use: <?=$swapfile_running;?>
    Swapfile <?=$swap_location."/".$swap_filename;?> size: <?=print('%.3f MB', intval($swapfile_size)/1024);?>
    Swapfile <?=$swap_location."/".$swap_filename;?> usage: <?=print('%.3f MB', intval($swapfile_usage)/1024);?>

    Swapfile Plugin Hosting Server Online: Yes/No <span class="green-text"></span> <span class="red-text"></span>
    Swapfile Plugin Online Version: vX.X.X/None <span class="green-text"></span> <span class="red-text"></span>
    Swapfile Plugin Local Version: vX.X.X/None  <span class="green-text"></span> <span class="red-text"></span>
  </div>

  <div id="title">
    <span class="left">Actions</span>
  </div>

  <br></br>

  <div>
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="3">Control Actions</td>
      </tr>
      <?if ($swapfile_running == "Yes") :?>
        <tr>
          <td width="30%">
            <form name="stop" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile stop">
              <input type="submit" name="runCmd" value="Stop">
            </form>
          </td>
          <td>Stop swapfile usage</td>
        </tr>
        <tr>
          <td width="30%">
            <form name="restart" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile restart">
              <input type="submit" name="runCmd" value="Restart">
            </form>
          </td>
          <td>Restart swapfile usage</td>
        </tr>
        <?$control_actions_exist = "true"?>
      <?else:?>
        <tr>
          <td width="30%">
            <form name="start" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile start">
              <input type="submit" name="runCmd" value="Start">
            </form>
          </td>
          <td>Start swapfile usage</td>
        </tr>
        <?$control_actions_exist = "true"?>
      <?endif;?>
      <?if ($control_actions_exist=="false"):?>
        <tr>
          <td colspan="3" align="center">No Control Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

  <br></br>

  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Version Actions</td>
      </tr>
      <?if (($plg_online_exist=="0") && ($plg_online_ver!=$plg_loc_ver)):?>
        <tr>
          <td>ONLINE Plugin version different than LOCAL Plugin version</td>
          <td>
            <form name="updateplg" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.virtualbox updateplg">
              <input type="submit" name="runCmd" value="Update">
            </form>
          </td>
        </tr>
        <?$version_actions_exist="true"?>
      <?endif;?>
      <?if ($version_actions_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No Version Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

</div>
    
<div style="width: 49%; float:right; border: 0px solid black;">

  <div id="title">
    <span class="left">Configuration</span>
  </div>

  <br></br>

  <div>
    <form name="swapfile_settings" method="POST" action="/update.htm" target="progressFrame" onsubmit="validateForm();">
      <table>
        <tr>
          <td colspan="2" align="center">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile updatecfg">
            <input type="submit" name="runCmd" value="Save Below Configuration">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile implement">
            <input type="submit" name="runCmd" value="Save and Implement Below Configuration">
            <button type="button" onClick="done();">Return to unRAID Settings Page</button>
          </td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">Boot and Startup options</td>
        </tr>
        <tr>
          <td>Start Swapfile during boot and/or installplg:</td>
          <td>
            <select name="arg1" id="arg1" size="1">
              <?=mk_option($swapfile_cfg['SWAP_ENABLE_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($swapfile_cfg['SWAP_ENABLE_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Check & Update VirtualBox during boot and/or installplg:</td>
          <td>
            <select name="arg2" id="arg2" size="1">
              <?=mk_option($virtualbox_cfg['UPGRADE_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($virtualbox_cfg['UPGRADE_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Check & Update Plugin during boot and/or installplg:</td>
          <td>
            <select name="arg3" id="arg3" size="1">
              <?=mk_option($virtualbox_cfg['UPGRADE_PLG_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($virtualbox_cfg['UPGRADE_PLG_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Start VMs and vboxwebsrv during unRAID array mounting:</td>
          <td>
            <select name="arg4" id="arg4" size="1">
              <?=mk_option($virtualbox_cfg['START_ON_ARRAY_MOUNT'], "true", "Yes");?>
              <?=mk_option($virtualbox_cfg['START_ON_ARRAY_MOUNT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Which Virtual Machines should be automatically started:</td>
          <td>
          <select name="arg5" id="arg5" size="1">
            <?=mk_option($virtualbox_cfg['START_VMS_ON_START'], "false", "None");?>
            <?=mk_option($virtualbox_cfg['START_VMS_ON_START'], "all", "All");?>
            <?=mk_option($virtualbox_cfg['START_VMS_ON_START'], "previous", "Previous Session");?>
          </select>
          </td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">VBOXWEBSRV Host and Port options</td>
        </tr>
        <tr>
          <td>vboxwebsrv Host IP:</td>
          <td><input type="text" name="arg6" id="arg6" style="width: 5em;" maxlength="15" value="<?=$virtualbox_cfg['VBOXWEBSRV_HOST_IP'];?>"></td>
        </tr>
        <tr>
          <td>vboxwebsrv Port:</td>
          <td><input type="text" name="arg7" id="arg7" style="width: 3em;" maxlength="5" value="<?=$virtualbox_cfg['VBOXWEBSRV_HOST_PORT'];?>"></td>
        </tr>

        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">VBOXWEBSRV log file options (see <u><a href="http://download.virtualbox.org/virtualbox/SDKRef.pdf" target="_blank">Command line options of vboxwebsrv - Page 21</a></u>)</td>
        </tr>
        <tr>
          <td>vboxwebsrv log file location (must be valid location):</td>
          <td><input type="text" name="arg8" id="arg8" style="width: 17em;" maxlength="255" value="<?=$virtualbox_cfg['VBOXWEBSRV_LOGFILE'];?>"></td>
        </tr>
        <tr>
          <td>vboxwebsrv log file "--verbose" mode:</td>
          <td>
          <select name="arg9" id="arg9" size="1">
            <?=mk_option($virtualbox_cfg['VBOXWEBSRV_VERBOSE'], "true", "Yes");?>
            <?=mk_option($virtualbox_cfg['VBOXWEBSRV_VERBOSE'], "false", "No");?>
          </select>
          </td>
        </tr>
        <tr>
          <td>vboxwebsrv log file rotation "LOGROTATE" option:</td>
          <td><input type="text" name="arg10" id="arg10" style="width: 3em;" maxlength="10" value="<?=$virtualbox_cfg['VBOXWEBSRV_LOGROTATE'];?>"></td>
        </tr>
        <tr>
          <td>vboxwebsrv log file size "LOGSIZE" option:</td>
          <td><input type="text" name="arg11" id="arg11" style="width: 4em;" value="<?=$virtualbox_cfg['VBOXWEBSRV_LOGSIZE'];?>"></td>
        </tr>
        <tr>
          <td>vboxwebsrv log file interval "LOGINTERVAL" option:</td>
          <td><input type="text" name="arg12" id="arg12" style="width: 4em;" maxlength="10" value="<?=$virtualbox_cfg['VBOXWEBSRV_LOGINTERVAL'];?>"></td>
        </tr>
      </table>
    </form>
  </div>

  <br></br>
  <br></br>

</div>

<script type="text/javascript">
function validateForm() {
  document.getElementById('arg1').disabled = false;
  document.getElementById('arg2').disabled = false;
  document.getElementById('arg3').disabled = false;
  document.getElementById('arg4').disabled = false;
  document.getElementById('arg5').disabled = false;
  document.getElementById('arg6').disabled = false;
  document.getElementById('arg7').disabled = false;
  document.getElementById('arg8').disabled = false;
  document.getElementById('arg9').disabled = false;
  document.getElementById('arg10').disabled = false;
  document.getElementById('arg11').disabled = false;
  document.getElementById('arg12').disabled = false;
}

function checkRUNNING(form) {
  if ("<?=$virtualbox_running?>" == "yes") {
    form.arg1.disabled = true;
    form.arg2.disabled = true;
    form.arg3.disabled = true;
    form.arg4.disabled = true;
    form.arg5.disabled = true;
    form.arg6.disabled = true;
    form.arg7.disabled = true;
    form.arg8.disabled = true;
    form.arg9.disabled = true;
    form.arg10.disabled = true;
    form.arg11.disabled = true;
    form.arg12.disabled = true;
  }
}

checkRUNNING(document.virtualbox_settings);
</script>

</BODY>
</HTML>

]]>
</INLINE>
</FILE>

</PLUGIN>
